/* =====================================
   Reusable Mixins
   ===================================== */

   @mixin respond-to($breakpoint) {
    @if map-has-key($breakpoints, $breakpoint) {
      @media (min-width: map-get($breakpoints, $breakpoint)) {
        @content;
      }
    } @else {
      @warn "Breakpoint `#{$breakpoint}` not found in $breakpoints map";
    }
  }
  
  @mixin clearfix {
    &::after {
      content: "";
      display: table;
      clear: both;
    }
  }
  
  @mixin heading-styles {
    font-family: $font-heading;
    font-weight: 300;
    line-height: 1.5em;
    margin: 0 0 1rem 0;
    color: $color-secondary;
    text-transform: uppercase;
  }
  
  @mixin card-hover-effect {
    transition: transform 0.3s ease;
    &:hover {
      transform: translateY(-5px);
    }
  }
  
  @mixin line-fx-animation {
    @keyframes stroke-top {
      0% { left: -100%; opacity: 1; }
      100% { left: 100%; opacity: 1; }
    }
    @keyframes stroke-top2 {
      0% { left: -100%; opacity: 1; }
      100% { left: 100%; opacity: 0; }
    }
    // Include all stroke animations here
  }
  
  @mixin social-icon-transition {
    transition: all 0.3s ease;
    &:hover {
      transform: translateY(-3px);
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    }
  }
  
  @mixin retina-background($image, $extension: png) {
    @media only screen and (min-resolution: 2dppx) {
      background-image: url('#{$image}@2x.#{$extension}');
      background-size: contain;
    }
  }